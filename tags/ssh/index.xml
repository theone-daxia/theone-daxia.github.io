<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SSH on 冲和</title>
    <link>https://theone-daxia.github.io/tags/ssh/</link>
    <description>Recent content in SSH on 冲和</description>
    <image>
      <url>https://theone-daxia.github.io/papermod-cover.png</url>
      <link>https://theone-daxia.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 24 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://theone-daxia.github.io/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SSH 端口转发</title>
      <link>https://theone-daxia.github.io/blog/code/ssh_tunnel/</link>
      <pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://theone-daxia.github.io/blog/code/ssh_tunnel/</guid>
      <description>简介 SSH 除了登陆服务器，还有一大用途，就是作为加密通信的中介，充当两台服务器之间的加密跳板，使得原本不加密的通信变成加密通信。 这个功能成为端口转发（port forwarding），又称 SSH 隧道（tunnel）。
端口转发有两个主要作用：
将不加密的数据放在 SSH 安全连接里传输，使原本不安全的网络服务增加了安全性，比如通过端口转发访问 Telnet、FTP 等明文服务，数据传输就都会加密。 作为数据通信的加密跳板，绕过网络防火墙。 三种使用方法 端口转发有三种使用方法：动态转发、本地转发、远程转发。
1. 动态转发 动态转发是指，本机与 SSH 服务器之间创建了一个加密连接，本机内部针对某个端口的通信，都通过这个加密连接转发。
动态转发将一个本地端口绑定到了 SSH 服务器，而 目标地址:目标端口 是不固定的，完全由发起的请求决定，所以叫动态转发。
ssh -D local-port tunnel-host -N 上面命令中，-D表示动态转发，local-port是本地端口，tunnel-host是 SSH 服务器， -N表示这个 SSH 连接只进行端口转发，不登录远程 Shell，不能执行远程命令，只能充当隧道。
如果经常使用动态转发，可以将设置写入 SSH 客户端的个人配置文件（~/.ssh/config）
DynamicForward tunnel-host:local-port 应用举例 例1：
远程云主机B1运行了多个服务，分别使用了不同端口，本地主机A1需要访问这些服务。 一方面，由于安全限制，本地主机A1并不能直接访问远程云主机B1上的服务，因此需要进行端口转发， 另一方面，为每个端口分别创建本地端口转发非常麻烦。
可通过动态端口转发，将A1发起的请求转发到B1，命令如下：
ssh -D localhost:8080 root@xxx.xxx.xxx.xxx -N 注意，这种转发采用了 SOCKS5 协议，访问网站时，需要把 HTTP 请求转成 SOCKS5 协议，才能把本地端口的请求转发出去。 下面是 SSH 隧道建立后的一个使用示例：
curl -x socks5://localhost:8080 https://www.google.com 上面命令中，curl 的-x参数指定代理服务器，即通过 SOCKS5 协议的本地 8080 端口，访问https://www.</description>
    </item>
    
  </channel>
</rss>
