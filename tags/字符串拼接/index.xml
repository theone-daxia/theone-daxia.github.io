<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>字符串拼接 on 冲和</title>
    <link>https://theone-daxia.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5/</link>
    <description>Recent content in 字符串拼接 on 冲和</description>
    <image>
      <url>https://theone-daxia.github.io/papermod-cover.png</url>
      <link>https://theone-daxia.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 18 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://theone-daxia.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go 字符串拼接对比</title>
      <link>https://theone-daxia.github.io/blog/code/go/string-join/</link>
      <pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://theone-daxia.github.io/blog/code/go/string-join/</guid>
      <description>字符串拼接方式 += bytes.Buffer{}.WriteString() strings.Builder{}.WriteString() copy 基准测试 代码：
var ( str = &amp;#34;s&amp;#34; count = 1000 expectStr = strings.Repeat(str, count) ) func BenchmarkPlus(b *testing.B) { for i := 0; i &amp;lt; b.N; i++ { var s string for j := 0; j &amp;lt; count; j++ { s += str } if expectStr != s { b.Error(&amp;#34;repeat count error&amp;#34;) } } } func BenchmarkBuffer(b *testing.B) { for i := 0; i &amp;lt; b.</description>
    </item>
    
  </channel>
</rss>
