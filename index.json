[{"content":"缘起 发现最近总是便秘，两三天都不\u0026quot;上大号\u0026quot;，今早起床突然意识到可能是我一直喝胎菊茶造成的。 一查，果然！\n看下面的功效及副作用可知，适量喝可促进消化，预防便秘，但是喝多了，则会出现反效果，还容易损伤脾胃，出现食欲减退的情况。\n这完美的解释了为啥刚开始喝的时候，记得还是作息饮食规律，每天早上都\u0026quot;大号排毒\u0026quot;，最近却经常便秘，且不见好转，吃健胃消食片也没多大用。 不过怎样才算\u0026quot;喝多了\u0026quot;，以我的情况来看，每天 8～10 朵，不断冲泡，喝上 6～8 杯，连续喝 3～4 个月，就算喝多了。\n简介 胎菊又称甘菊、小胎黄、小白菊，古时曾作贡品，是杭白菊中最上品的一种。 在杭白菊花朵未完全张开的时候摘下来，经干燥加工制成。\n胎菊，性微寒，味辛甘苦，能疏散风热、平肝明目、清热解毒。 用胎菊泡茶，味纯正，浓烈，色泽金黄，含有花蜜的清香，泡久了也不会散开。\n功效 1. 明目 胎菊具有很好的护眼、明目的作用，特别适合上班族等长时间面对电脑的人群。\n2. 补肝、清肝 胎菊具有清热解毒的作用，还能增强身体的抵抗力，预防冠心病等。 胎菊和冰糖一起浸泡，还能起到抗菌作用。\n3. 祛除湿气 一般而言，体内湿气过重的症状表现为口干舌燥、眼睛干涩、上火等，此时可泡一杯胎菊茶来缓解。\n4. 缓解便秘 胎菊花富含丹宁，这种物质能有效促进肠胃蠕动，很好的增强身体的消化能力和食欲，让便秘得到缓解。\n副作用 虽然胎菊有保健的功效，但如果长期服用也不好，会引起身体不适。\n1. 腹痛腹泻 胎菊可以促进消化，但喝多了则会出现反效果，导致肠胃出现寒凉之气，出现腹痛腹泻的现象。\n2. 上火 胎菊性微寒，阴虚火热体质的人喝多了会引起上火现象。\n3. 脾胃受损，食欲减退 喝多了胎菊容易引起胃部不适，导致反酸，肠胃分泌液不正常，可能引起食欲减退的情况。因此脾胃虚寒的人更加不能多喝胎菊，容易损伤脾胃。\n","permalink":"https://theone-daxia.github.io/blog/tea/taiju/","summary":"缘起 发现最近总是便秘，两三天都不\u0026quot;上大号\u0026quot;，今早起床突然意识到可能是我一直喝胎菊茶造成的。 一查，果然！\n看下面的功效及副作用可知，适量喝可促进消化，预防便秘，但是喝多了，则会出现反效果，还容易损伤脾胃，出现食欲减退的情况。\n这完美的解释了为啥刚开始喝的时候，记得还是作息饮食规律，每天早上都\u0026quot;大号排毒\u0026quot;，最近却经常便秘，且不见好转，吃健胃消食片也没多大用。 不过怎样才算\u0026quot;喝多了\u0026quot;，以我的情况来看，每天 8～10 朵，不断冲泡，喝上 6～8 杯，连续喝 3～4 个月，就算喝多了。\n简介 胎菊又称甘菊、小胎黄、小白菊，古时曾作贡品，是杭白菊中最上品的一种。 在杭白菊花朵未完全张开的时候摘下来，经干燥加工制成。\n胎菊，性微寒，味辛甘苦，能疏散风热、平肝明目、清热解毒。 用胎菊泡茶，味纯正，浓烈，色泽金黄，含有花蜜的清香，泡久了也不会散开。\n功效 1. 明目 胎菊具有很好的护眼、明目的作用，特别适合上班族等长时间面对电脑的人群。\n2. 补肝、清肝 胎菊具有清热解毒的作用，还能增强身体的抵抗力，预防冠心病等。 胎菊和冰糖一起浸泡，还能起到抗菌作用。\n3. 祛除湿气 一般而言，体内湿气过重的症状表现为口干舌燥、眼睛干涩、上火等，此时可泡一杯胎菊茶来缓解。\n4. 缓解便秘 胎菊花富含丹宁，这种物质能有效促进肠胃蠕动，很好的增强身体的消化能力和食欲，让便秘得到缓解。\n副作用 虽然胎菊有保健的功效，但如果长期服用也不好，会引起身体不适。\n1. 腹痛腹泻 胎菊可以促进消化，但喝多了则会出现反效果，导致肠胃出现寒凉之气，出现腹痛腹泻的现象。\n2. 上火 胎菊性微寒，阴虚火热体质的人喝多了会引起上火现象。\n3. 脾胃受损，食欲减退 喝多了胎菊容易引起胃部不适，导致反酸，肠胃分泌液不正常，可能引起食欲减退的情况。因此脾胃虚寒的人更加不能多喝胎菊，容易损伤脾胃。","title":"胎菊"},{"content":"简介 SSH 除了登陆服务器，还有一大用途，就是作为加密通信的中介，充当两台服务器之间的加密跳板，使得原本不加密的通信变成加密通信。 这个功能成为端口转发（port forwarding），又称 SSH 隧道（tunnel）。\n端口转发有两个主要作用：\n 将不加密的数据放在 SSH 安全连接里传输，使原本不安全的网络服务增加了安全性，比如通过端口转发访问 Telnet、FTP 等明文服务，数据传输就都会加密。 作为数据通信的加密跳板，绕过网络防火墙。  三种使用方法 端口转发有三种使用方法：动态转发、本地转发、远程转发。\n1. 动态转发 动态转发是指，本机与 SSH 服务器之间创建了一个加密连接，本机内部针对某个端口的通信，都通过这个加密连接转发。\n动态转发将一个本地端口绑定到了 SSH 服务器，而 目标地址:目标端口 是不固定的，完全由发起的请求决定，所以叫动态转发。\nssh -D local-port tunnel-host -N 上面命令中，-D表示动态转发，local-port是本地端口，tunnel-host是 SSH 服务器， -N表示这个 SSH 连接只进行端口转发，不登录远程 Shell，不能执行远程命令，只能充当隧道。\n如果经常使用动态转发，可以将设置写入 SSH 客户端的个人配置文件（~/.ssh/config）\nDynamicForward tunnel-host:local-port 应用举例 例1：\n 远程云主机B1运行了多个服务，分别使用了不同端口，本地主机A1需要访问这些服务。 一方面，由于安全限制，本地主机A1并不能直接访问远程云主机B1上的服务，因此需要进行端口转发， 另一方面，为每个端口分别创建本地端口转发非常麻烦。\n 可通过动态端口转发，将A1发起的请求转发到B1，命令如下：\nssh -D localhost:8080 root@xxx.xxx.xxx.xxx -N 注意，这种转发采用了 SOCKS5 协议，访问网站时，需要把 HTTP 请求转成 SOCKS5 协议，才能把本地端口的请求转发出去。 下面是 SSH 隧道建立后的一个使用示例：\ncurl -x socks5://localhost:8080 https://www.google.com 上面命令中，curl 的-x参数指定代理服务器，即通过 SOCKS5 协议的本地 8080 端口，访问https://www.google.com。\n2. 本地转发 本地转发是在本地服务器的 SSH 客户端建立的转发规则。\n本地转发会指定一个本地端口，所有发向那个端口的请求，都会转发到 SSH 跳板机（tunnel-host）， 然后 SSH 跳板机作为中介，将收到的请求发到目标服务器（target-host）的目标端口（target-port）。\nssh -L local-port:target-host:target-port tunnel-host 上面命令中，-L参数表示本地转发，local-port是本地端口， target-host是你想要访问的目标服务器，target-port是目标服务器的端口， tunnel-host是 SSH 跳板机。\n如果经常使用本地转发，可以将设置写入 SSH 客户端的用户个人配置文件（~/.ssh/config）\nHost test.example.com LocalForward client-IP:client-port server-IP:server-port 应用举例 例1：\n 有一台阿里云 ECS，安全组默认只允许了 22 端口的访问， 如果上面有一个运行中的服务绑定了 8080 端口，想要临时访问一下该服务的话，该怎么办呢？还得先 这样就比较麻烦，\n 一种办法是，先配置安全组，然后进行访问，但这样比较麻烦，还得登后台添加配置。\n另一种就是利用本地转发，非常方便，可以在本地机器运行如下命令：\nssh -L 3000:localhost:8080 ecs-host 上面命令中，ecs-host为 ECS 的地址（比如用户名加公网ip：root@xxx.xxx.xxx.xxx）， 这样就可以通过访问本地的 3000 端口，来请求 ECS 上 8080 端口的服务了。\n3. 远程转发 远程转发是在远程 SSH 服务器建立的转发规则。\n它跟本地转发正好反过来。建立本地到远程服务器的 SSH 隧道以后， 本地转发是通过本地服务器访问远程服务器， 远程转发是通过远程服务器访问本地服务器。 命令格式如下：\nssh -R remote-port:target-host:targer-port -N remote-host 上面命令中，-R表示远程端口转发，remote-port是远程服务器的端口， target-host和target-port是目标服务器及其端口， remote-host是远程服务器。\n如果经常使用远程端口转发，可以将设置写入 SSH 客户端的用户个人配置文件（~/.ssh/config）\nHost remote-forward HostName test.example.com RemoteForward remote-port target-host:target-port 应用举例 例1：\n 内网某台服务器 localhost 在 80 端口开了一个服务，可以通过远程转发将这个 80 端口， 映射到具有公网 IP 地址的 public.server 服务器的 8080 端口， 使得访问 public.server:8080 这个地址，就可以访问到那台内网服务器的 80 端口。\n ssh -R 8080:localhost:80 -N public.server 例2：\n 本地服务器 local 在外网，SSH 跳板机和目标服务器 private.server 都在内网，必须通过 SSH 跳板机才能访问目标服务器。 但是本地服务器 local 无法访问内网中的 SSH 跳板机，而 SSH 跳板机可以访问本地服务器。 由于本机无法访问内网 SSH 跳板机，就无法从外网发起 SSH 隧道，建立端口转发。 得反着来，从 SSH 跳板机发起隧道，建立端口转发，这就形成了远程端口转发。 跳板机执行如下命令，绑定本地服务器 local 的 2121 端口，去访问 private.server:80。\n ssh -R 2121:private.server:80 -N local 显然，远程转发要求本地计算机 local 也安装了 SSH 服务器，这样才能接受 SSH 跳板机的远程登录。\n例3：\n 家里有台服务器 local，连着家里的 wifi，公司有台处在内网中的服务器 private.server， local 和 private.server 互相都访问不了，但它们都能访问外网。 这时想用家里的服务器 local 访问 private.server:80，该怎么办？\n 可以在外网找一个它们都能访问到的服务器，比如还是那台阿里云 ECS（这台 ECS 不能访问 local 和 private.server）， 在 local 上建立 local -\u0026gt; ECS 的本地转发，然后在 private.server 上建立 private.server -\u0026gt; ECS 的远程转发， 这样在 local 访问 localhost:80 就能访问到 private.server 的 80 端口了。\n这也就是所谓的内网穿透。不过涉及公司财产安全，大家不要这样 作死 尝试，因为可能遇到下述情况：\n 一哥们穿透内网，被黑客利用，导致内网多台机器数据丢失，被黑客敲诈勒索。\n 碰上这种事情，该怎么哭？乖乖申请公司的 VPN 它不香么？\n参考文献 SSH教程 - 网道\n","permalink":"https://theone-daxia.github.io/blog/ssh_tunnel/","summary":"简介 SSH 除了登陆服务器，还有一大用途，就是作为加密通信的中介，充当两台服务器之间的加密跳板，使得原本不加密的通信变成加密通信。 这个功能成为端口转发（port forwarding），又称 SSH 隧道（tunnel）。\n端口转发有两个主要作用：\n 将不加密的数据放在 SSH 安全连接里传输，使原本不安全的网络服务增加了安全性，比如通过端口转发访问 Telnet、FTP 等明文服务，数据传输就都会加密。 作为数据通信的加密跳板，绕过网络防火墙。  三种使用方法 端口转发有三种使用方法：动态转发、本地转发、远程转发。\n1. 动态转发 动态转发是指，本机与 SSH 服务器之间创建了一个加密连接，本机内部针对某个端口的通信，都通过这个加密连接转发。\n动态转发将一个本地端口绑定到了 SSH 服务器，而 目标地址:目标端口 是不固定的，完全由发起的请求决定，所以叫动态转发。\nssh -D local-port tunnel-host -N 上面命令中，-D表示动态转发，local-port是本地端口，tunnel-host是 SSH 服务器， -N表示这个 SSH 连接只进行端口转发，不登录远程 Shell，不能执行远程命令，只能充当隧道。\n如果经常使用动态转发，可以将设置写入 SSH 客户端的个人配置文件（~/.ssh/config）\nDynamicForward tunnel-host:local-port 应用举例 例1：\n 远程云主机B1运行了多个服务，分别使用了不同端口，本地主机A1需要访问这些服务。 一方面，由于安全限制，本地主机A1并不能直接访问远程云主机B1上的服务，因此需要进行端口转发， 另一方面，为每个端口分别创建本地端口转发非常麻烦。\n 可通过动态端口转发，将A1发起的请求转发到B1，命令如下：\nssh -D localhost:8080 root@xxx.xxx.xxx.xxx -N 注意，这种转发采用了 SOCKS5 协议，访问网站时，需要把 HTTP 请求转成 SOCKS5 协议，才能把本地端口的请求转发出去。 下面是 SSH 隧道建立后的一个使用示例：\ncurl -x socks5://localhost:8080 https://www.","title":"SSH 端口转发"},{"content":"目标 使用 GithubPages、Hugo 创建个人博客网站\n功能  正常博客写作 文章支持评论 网站数据分析  准备工作  拥有一个 github 账号 安装 hugo（ Hugo文档 ）  步骤 github 创建两个仓库  一个源码仓库，设置权限为 Private（用于对网站进行任何更改操作） 一个博客仓库，设置权限为 Public（用于对外展示，项目名称为：xxx.github.io，xxx为账户名称）  初始化源码项目  使用 hugo 生成网站  hugo new site quickstart 选择并添加一款心仪主题（ 主题选择 ）  # 此处以 Base16 主题为例 cd quickstart/themes git submodule add https://github.com/htdvisser/hugo-base16-theme.git base16 添加博客内容  hugo new blogs/my-first-blog.md 编辑配置文件 config.toml，配置主题及菜单  # 将下面内容添加进 config.toml（不包括本行） theme = \u0026quot;base16\u0026quot; [menu] [[menu.main]] name = \u0026quot;首页\u0026quot; url = \u0026quot;/\u0026quot; weight = 1 [[menu.main]] name = \u0026quot;博客\u0026quot; url = \u0026quot;/blog/\u0026quot; weight = 2 将 quickstart 目录里的内容 push 到源码项目，完成项目初始化  配置 CI/CD 可采用 hugo -D 来生成静态页面，然后同步到公开的博客仓库。 这样做不仅麻烦，也不符合极客精神，所以采用 GithubActions 来自动集成部署。\n配置步骤：\n  源码项目根目录下，添加 .github/workflows 文件夹\n  在刚创建的文件夹下创建 gh-pages.yml 文件（文件名随便写），写入如下代码\nname: github pages on: push: branches: - main # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: 'latest' # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: github.ref == 'refs/heads/main' with: external_repository: xxx/xxx.github.io\t# 发布到哪个repo deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} publish_dir: ./public\t# 注意这里指的是要发布哪个文件夹的内容，而不是指发布到目的仓库的什么位置，因为hugo默认生成静态网页到public文件夹，所以这里发布public文件夹里的内容 publish_branch: main\t# 发布到哪个branch  注： 此处的 ACTIONS_DEPLOY_KEY 需要在源码仓库中配置，具体步骤如下\n  生成一对新的 SSH Key ssh-keygen -t rsa\n  将 Public Key 添加到 xxx.github.io 仓库，setting -\u0026gt; Deploy Keys，变量名随便起，勾选 Allow write access。\n  将 Private Key 添加到源码仓库，setting -\u0026gt; Secrets，变量名取 ACTIONS_DEPLOY_KEY\n   另： Github Actions 的三种实现方案\n  github_token\n  deploy_key\n  personal_token\ngithub_token 适合 源码 和 public/ 存放在同一个仓库下的不同分支（比如源码在 main，public/ 内容在 gh-pages），指定部署到 gh-pages 分支即可。\ndeploy_key 适合 源码 和 public/ 存放在不同仓库下的模式（此为本文选择的方式）。\n    添加附加功能 文章支持评论 可选择 disqus、utteranc，由于 disqus 比较麻烦，得注册账号，好像还收费？所以选择 utteranc。\nutteranc 是一个免费的 GithubApp，可以在 Github 的 Marketplace 中获取，具体操作不再赘述。 下载后绑定到公开的博客仓库，然后在 layouts/partials/article.html 的合适位置添加如下代码\n{{ if .Site.Params.utteranc.enable }} \u0026lt;script src=\u0026quot;https://utteranc.es/client.js\u0026quot; repo=\u0026quot;{{ .Site.Params.utteranc.repo }}\u0026quot; issue-term=\u0026quot;{{ .Site.Params.utteranc.issueTerm }}\u0026quot; theme=\u0026quot;{{ .Site.Params.utteranc.theme }}\u0026quot; crossorigin=\u0026quot;anonymous\u0026quot; async\u0026gt; \u0026lt;/script\u0026gt; {{ end }} 在 config.toml 中添加如下配置\n[params.utteranc] enable = false repo = \u0026quot;xxx/xxx.github.io\u0026quot; issueTerm = \u0026quot;title\u0026quot; theme = \u0026quot;github-light\u0026quot; 由于最终显示效果不理想\n 个人感觉不好看，跟主题风格不搭 评论区域加载速度慢，进入文章几秒后才会出现 个人也不打算在博客文章里跟人交流  故将 utteranc.enable 置为 false，想启用的时候再说。\n添加谷歌分析 谷歌分析是由Google提供的个人免费的网站流量统计服务，支持查看实时流量，分析功能强大。网页和移动端均可查看（需要有vpn）\n使用步骤：\n  登陆谷歌分析（ 登陆地址 ），创建账号及媒体资源\n  在创建的媒体资源里，添加数据流（选择网站）\n 网站网址：填写博客仓库地址，即 xxx.github.io 数据流名称：自己命名    复制数据流的衡量ID（G-xxx），并将其添加进源码项目的 config.toml 中\ngoogleAnalytics = \u0026quot;G-xxx\u0026quot;   复制 themes/base16/layouts/partials/header.html 到 layouts/partials/header.html，然后在复制出来的 header.html 的 head 标签中添加如下代码\n\u0026lt;!-- 添加谷歌分析插件 Google Analytics --\u0026gt; {{ template \u0026quot;_internal/google_analytics.html\u0026quot; . }} 注：该 template 为 Hugo 附带的一个内部模板\n 如果不采用内部模板的写法，还可以将创建数据流时，提示的分析代码添加进 head 标签中，不过这种方法明显没有内部模板的方式优雅\n\u0026lt;!-- Global site tag (gtag.js) - Google Analytics --\u0026gt; \u0026lt;script async src=\u0026quot;https://www.googletagmanager.com/gtag/js?id=G-xxx\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'G-xxx'); \u0026lt;/script\u0026gt;   推到源码项目并自动部署后，访问博客，即可在谷歌分析的实时数据中看到统计信息\n  添加卜蒜子 卜蒜子 是一个静态页面计数服务，可显示 page_uv、page_pv、site_uv、site_pv 等数据（ 卜蒜子文档 ）。这里利用它给文章加上 page_uv。\n步骤：\n  在 layouts/partials/header.html 的 head 标签中添加如下代码\n\u0026lt;script async src=\u0026quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;   在 layouts/partials/article.html 的 Title 下面添加如下代码\n{{ if .Site.Params.busuanzi.enable }} \u0026lt;div style=\u0026quot;padding: 0 0 1em 0\u0026quot;\u0026gt; \u0026lt;span id=\u0026quot;busuanzi_container_page_pv\u0026quot;\u0026gt; \u0026lt;svg xmlns=\u0026quot;http://www.w3.org/2000/svg\u0026quot; width=\u0026quot;19\u0026quot; height=\u0026quot;14\u0026quot; viewBox=\u0026quot;0 0 20 20\u0026quot; fill=\u0026quot;none\u0026quot; stroke=\u0026quot;currentColor\u0026quot; stroke-width=\u0026quot;2\u0026quot; stroke-linecap=\u0026quot;round\u0026quot; stroke-linejoin=\u0026quot;round\u0026quot; class=\u0026quot;feather feather-eye\u0026quot;\u0026gt;\u0026lt;path d=\u0026quot;M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\u0026quot;\u0026gt;\u0026lt;/path\u0026gt;\u0026lt;circle cx=\u0026quot;12\u0026quot; cy=\u0026quot;12\u0026quot; r=\u0026quot;3\u0026quot;\u0026gt;\u0026lt;/circle\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;span id=\u0026quot;busuanzi_value_page_pv\u0026quot;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; {{ end }} 注：这个小眼睛的 svg 文件，是从 这里 下载的，感觉很好用。\n  在 config.toml 中添加如下配置\n[params.busuanzi] enable = true   推到源码项目并自动部署后，访问博客，即可在文章的标题下看到统计信息\n  ","permalink":"https://theone-daxia.github.io/blog/hugo_blog_site_record/","summary":"目标 使用 GithubPages、Hugo 创建个人博客网站\n功能  正常博客写作 文章支持评论 网站数据分析  准备工作  拥有一个 github 账号 安装 hugo（ Hugo文档 ）  步骤 github 创建两个仓库  一个源码仓库，设置权限为 Private（用于对网站进行任何更改操作） 一个博客仓库，设置权限为 Public（用于对外展示，项目名称为：xxx.github.io，xxx为账户名称）  初始化源码项目  使用 hugo 生成网站  hugo new site quickstart 选择并添加一款心仪主题（ 主题选择 ）  # 此处以 Base16 主题为例 cd quickstart/themes git submodule add https://github.com/htdvisser/hugo-base16-theme.git base16 添加博客内容  hugo new blogs/my-first-blog.md 编辑配置文件 config.toml，配置主题及菜单  # 将下面内容添加进 config.toml（不包括本行） theme = \u0026quot;base16\u0026quot; [menu] [[menu.main]] name = \u0026quot;首页\u0026quot; url = \u0026quot;/\u0026quot; weight = 1 [[menu.","title":"利用Hugo搭建静态博客网站记录"},{"content":"NRV 计算 在购买预包装食物时，对是否购买？每天该吃多少？等问题，可通过下面的计算进行快速决策 NRV 计算地址\n营养素参考值 ","permalink":"https://theone-daxia.github.io/blog/nrv/","summary":"NRV 计算 在购买预包装食物时，对是否购买？每天该吃多少？等问题，可通过下面的计算进行快速决策 NRV 计算地址\n营养素参考值 ","title":"营养素参考值"},{"content":"微信订阅号 ","permalink":"https://theone-daxia.github.io/follow_me/","summary":"微信订阅号 ","title":""}]